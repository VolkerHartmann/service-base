plugins { 
    id "io.freefair.lombok" version "6.1.0"
    id "io.freefair.maven-publish-java" version "6.1.0"
    id "io.spring.dependency-management" version "1.0.7.RELEASE" 
    id "com.github.kt3k.coveralls" version "2.8.1" 
    id "org.owasp.dependencycheck" version "3.1.2"
    id "org.ajoberstar.grgit" version "2.0.1"
    id "com.jfrog.bintray" version "1.7.3"
}

ext { 
    springBootVersion = '2.4.0' 
    springDocVersion  = '1.5.6'
}

apply plugin: 'java'
apply plugin: 'jacoco'

description = """Base service module containing entities, interfaces and helpers."""
group = "edu.kit.datamanager"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    archivesBaseName = 'service-base'
}

println "Building ${name} version: ${version}"

repositories {
    mavenLocal()   
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-data-rest:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${springDocVersion}"

    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.1"
    implementation "com.fasterxml.jackson.module:jackson-module-afterburner:2.7.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.5"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.0"
   
    implementation "net.sf.dozer:dozer:5.5.1"

    implementation "io.jsonwebtoken:jjwt:0.9.1"

    implementation "com.github.fge:json-patch:1.9"
   
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "commons-validator:commons-validator:1.7"
    implementation "commons-io:commons-io:2.11.0"
    // http client uses commons-codec
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
     
    implementation "org.apache.commons:commons-collections4:4.4"
   
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "ch.qos.logback:logback-classic:1.2.5"

    //Java 11 Support 
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
    implementation 'javax.activation:activation:1.1.1'
    implementation 'org.javassist:javassist:3.28.0-GA'
   
    //test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:3.12.0"
    testImplementation "org.powermock:powermock-module-junit4:2.0.9"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.9"
}

if (project.hasProperty('deploy')) {
    println 'Using deploy profile for building ' + project.getName()
    apply from: 'gradle/profile-deploy.gradle'
}

jacoco {
    toolVersion = "0.8.5"
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}
jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    
    afterEvaluate {
        //exclude some classes/package from code coverage report
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [\
                //pure entity package currently not needed
                'org/datacite/**', \
                'org/purl/**', \
                //performance tests
                'edu/kit/datamanager/perf/**', \
                //remove AuthenticationHelper tests due to mocking -> code coverage cannot be determined
                //'edu/kit/datamanager/util/AuthenticationHelper*',
                //deprecated stuff
                'edu/kit/datamanager/util/DCTransformationHelper*',
                'edu/kit/datamanager/dao/ByExampleSpecification*',
                'edu/kit/datamanager/controller/hateoas/**',
                //exceptions 
                'edu/kit/datamanager/exceptions/**',
                'edu/kit/datamanager/service/impl/RabbitMQMessagingService*',
                'edu/kit/datamanager/configuration/**',
                'edu/kit/datamanager/service/IGenericService*'
            ])
        }))
    }
}

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
